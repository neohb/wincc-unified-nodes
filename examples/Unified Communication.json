[
    {
        "id": "95089e700593d7a5",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f3b66421283292e3",
        "type": "graphql-server",
        "name": "WinCC",
        "endpoint": "https://unifiedv19.wincc.local/graphql/",
        "ws_endpoint": "wss://unifiedv19.wincc.local/graphql/",
        "token": "",
        "caCertPath": "C:\\fakepath\\Siemens.Automation.WinCCUnifed Project CA.cert.pem"
    },
    {
        "id": "102c019a6638b7a4",
        "type": "ui_group",
        "name": "Default",
        "tab": "46b851a3dd21491e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "46b851a3dd21491e",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7cb46d3bd6ca4052",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8ffe2628bae13af0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "986e7f08141d41ecaf0b14c68478b0c3.s1.eu.hivemq.cloud",
        "port": "8883",
        "tls": "ff74da1d79cf56dc",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ff74da1d79cf56dc",
        "type": "tls-config",
        "name": "cert",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "986e7f08141d41ecaf0b14c68478b0c3.s1.eu.hivemq.cloud:8883/mqtt",
        "verifyservercert": true,
        "alpnprotocol": ""
    },
    {
        "id": "5d399c8b98d4f1e0",
        "type": "debug",
        "z": "95089e700593d7a5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.graphql.customHeaders",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 120,
        "wires": []
    },
    {
        "id": "5ad868ddca55d3e5",
        "type": "inject",
        "z": "95089e700593d7a5",
        "name": "",
        "props": [
            {
                "p": "customHeaders.Authorization",
                "v": "token",
                "vt": "flow"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "a3713765b918b979"
            ]
        ]
    },
    {
        "id": "b36ae9e7a0261517",
        "type": "debug",
        "z": "95089e700593d7a5",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 180,
        "wires": []
    },
    {
        "id": "479b22fb5272b666",
        "type": "ui_gauge",
        "z": "95089e700593d7a5",
        "name": "Read Tag",
        "group": "102c019a6638b7a4",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Read Tag (Unified to NodeRed)",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#1e00b3",
            "#e600b4",
            "#3abacb"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1000,
        "y": 240,
        "wires": []
    },
    {
        "id": "99ada12bd36b460b",
        "type": "ui_button",
        "z": "95089e700593d7a5",
        "name": "",
        "group": "102c019a6638b7a4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logon",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "payload",
        "topicType": "msg",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "d704a5acc1460033"
            ]
        ]
    },
    {
        "id": "4bc60ffca85e00c4",
        "type": "inject",
        "z": "95089e700593d7a5",
        "name": "Auto Login, Repeat Every Hour if needed",
        "props": [
            {
                "p": "topic",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "d704a5acc1460033"
            ]
        ]
    },
    {
        "id": "304e3bbb0cd0b317",
        "type": "ui_button",
        "z": "95089e700593d7a5",
        "name": "",
        "group": "102c019a6638b7a4",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Press to Send 0 to Unified",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "2683c1cfe4cd563b"
            ]
        ]
    },
    {
        "id": "d3ba9049710b20ae",
        "type": "ui_slider",
        "z": "95089e700593d7a5",
        "name": "",
        "label": "Write to Unified",
        "tooltip": "",
        "group": "102c019a6638b7a4",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "1",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "e06046fbff24fb13"
            ]
        ]
    },
    {
        "id": "e06046fbff24fb13",
        "type": "function",
        "z": "95089e700593d7a5",
        "name": "",
        "func": "var token = flow.get(\"token\");\n\nif (token) {\n    return {\n        variables: {\n            value: msg.payload\n        }\n    };\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 400,
        "wires": [
            [
                "44957b1f033d40f2"
            ]
        ]
    },
    {
        "id": "f0b102e5e0cc557c",
        "type": "ui_text",
        "z": "95089e700593d7a5",
        "group": "102c019a6638b7a4",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Token",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 990,
        "y": 60,
        "wires": []
    },
    {
        "id": "d704a5acc1460033",
        "type": "Unified Login",
        "z": "95089e700593d7a5",
        "name": "Unified Login",
        "graphql": "f3b66421283292e3",
        "format": "handlebars",
        "syntax": "mustache",
        "token": "",
        "showDebug": false,
        "x": 490,
        "y": 60,
        "wires": [
            [
                "5d399c8b98d4f1e0",
                "0e684bb409db33fa"
            ]
        ]
    },
    {
        "id": "cf24ffd129e5c6f3",
        "type": "mqtt in",
        "z": "95089e700593d7a5",
        "name": "Waiting for Topic",
        "topic": "test/topic",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "8ffe2628bae13af0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 960,
        "y": 460,
        "wires": [
            [
                "213ac251962072ad"
            ]
        ]
    },
    {
        "id": "213ac251962072ad",
        "type": "debug",
        "z": "95089e700593d7a5",
        "name": "Cloud MQTT to NodeRED",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 460,
        "wires": []
    },
    {
        "id": "8b35935d4be56868",
        "type": "mqtt out",
        "z": "95089e700593d7a5",
        "name": "test",
        "topic": "test/topic",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8ffe2628bae13af0",
        "x": 910,
        "y": 400,
        "wires": []
    },
    {
        "id": "84fcd0db8c50f75f",
        "type": "debug",
        "z": "95089e700593d7a5",
        "name": "Unified to Node-Red & MQTT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 600,
        "wires": []
    },
    {
        "id": "b2e195fb8c84d69b",
        "type": "inject",
        "z": "95089e700593d7a5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "15444ae96e5f209d",
                "fe093b21d44aae63"
            ]
        ]
    },
    {
        "id": "0e684bb409db33fa",
        "type": "function",
        "z": "95089e700593d7a5",
        "name": "set Authorization into flow",
        "func": "if (msg.payload) {\n    var token = msg.payload.graphql;\n    flow.get(\"token\", token);\n    return { \"payload\": token.customHeaders.Authorization };\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 60,
        "wires": [
            [
                "f0b102e5e0cc557c"
            ]
        ]
    },
    {
        "id": "645a4a8dd4252ec0",
        "type": "function",
        "z": "95089e700593d7a5",
        "name": "",
        "func": "return {\"payload\": msg.payload.graphql.tagValues[0].value.value };",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 240,
        "wires": [
            [
                "479b22fb5272b666"
            ]
        ]
    },
    {
        "id": "6db9b64f45190722",
        "type": "ui_gauge",
        "z": "95089e700593d7a5",
        "name": "Subcribed Tag",
        "group": "102c019a6638b7a4",
        "order": 8,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Subcribed Tag (Unified to MQTT)",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 940,
        "y": 540,
        "wires": []
    },
    {
        "id": "774016bb41ccb0de",
        "type": "debug",
        "z": "95089e700593d7a5",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 660,
        "wires": []
    },
    {
        "id": "15444ae96e5f209d",
        "type": "SUBCRIBE_TagValue",
        "z": "95089e700593d7a5",
        "name": "Sub Tag Value",
        "graphql": "f3b66421283292e3",
        "format": "handlebars",
        "template": "subscription Subscription {\ntagValues(names: \"GQL_MAP_1\") {\nvalue {\nvalue\n}\n}\n}",
        "syntax": "mustache",
        "token": "",
        "showDebug": false,
        "x": 540,
        "y": 540,
        "wires": [
            [
                "6db9b64f45190722",
                "8b35935d4be56868",
                "84fcd0db8c50f75f"
            ]
        ]
    },
    {
        "id": "a3713765b918b979",
        "type": "ReadWrite_Tag",
        "z": "95089e700593d7a5",
        "name": "Read Tag",
        "graphql": "f3b66421283292e3",
        "format": "handlebars",
        "template": "query {\n  tagValues(names: [\"GQL_MAP_1\"]) {\n    value {\n      value\n    }\n  }\n}",
        "syntax": "mustache",
        "showDebug": false,
        "x": 400,
        "y": 200,
        "wires": [
            [
                "b36ae9e7a0261517",
                "645a4a8dd4252ec0"
            ]
        ]
    },
    {
        "id": "2683c1cfe4cd563b",
        "type": "ReadWrite_Tag",
        "z": "95089e700593d7a5",
        "name": "Write Fix value 0",
        "graphql": "f3b66421283292e3",
        "format": "handlebars",
        "template": "mutation {\nwriteTagValues(input: {name: \"GQL_MAP_1\", value: 0}) {\nerror {\ncode\ndescription\n}\n}\n}",
        "syntax": "mustache",
        "showDebug": false,
        "x": 650,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "44957b1f033d40f2",
        "type": "ReadWrite_Tag",
        "z": "95089e700593d7a5",
        "name": "Write Variable Values",
        "graphql": "f3b66421283292e3",
        "format": "handlebars",
        "template": "mutation($value: Variant!) {\nwriteTagValues(input: {name: \"GQL_MAP_1\", value: $value}) {\nerror {\ncode\ndescription\n}\n}\n}",
        "syntax": "mustache",
        "showDebug": false,
        "x": 660,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "fe093b21d44aae63",
        "type": "SUBCRIBE_AlarmID",
        "z": "95089e700593d7a5",
        "name": "Subcribe to Alarm ID",
        "graphql": "f3b66421283292e3",
        "format": "handlebars",
        "template": "subscription ActiveAlarms {\n  activeAlarms(systemNames: \"HMI_RT_1\", filterString: \"ID = 7\") {\n    value\n    state\n  }\n}",
        "syntax": "mustache",
        "showDebug": false,
        "x": 560,
        "y": 620,
        "wires": [
            [
                "774016bb41ccb0de"
            ],
            [
                "f470253093d6ea73"
            ]
        ]
    },
    {
        "id": "f470253093d6ea73",
        "type": "debug",
        "z": "95089e700593d7a5",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 700,
        "wires": []
    }
]